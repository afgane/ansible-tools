---

- name: Check if Galaxy is managed by supervisor
  supervisorctl: name="galaxy:" state=present
  register: supervisor_galaxy
  ignore_errors: yes
  sudo: yes
  sudo_user: root

- name: Restart Galaxy
  supervisorctl: name="galaxy:" state=restarted
  when: supervisor_galaxy.failed is undefined
  ignore_errors: yes
  sudo: yes
  sudo_user: root

- name: Stop Galaxy
  shell: "{{ galaxy_server_dir }}/run.sh --pid-file={{ galaxy_tools_pid_file_name }} --log-file={{ galaxy_tools_log_file_name }} --stop-daemon"
  when: supervisor_galaxy.failed is defined
  ignore_errors: true

- name: Wait for Galaxy to stop
  wait_for: port=8080 delay=5 state=stopped timeout=150
  when: supervisor_galaxy.failed is defined

- name: Start Galaxy
  shell: "{{ galaxy_server_dir }}/run.sh --pid-file={{ galaxy_tools_pid_file_name }} --log-file={{ galaxy_tools_log_file_name }} --daemon"
  when: supervisor_galaxy.failed is defined

- name: Wait for Galaxy to start
  wait_for: port=8080 delay=5 state=started timeout=150
  when: supervisor_galaxy.failed is defined